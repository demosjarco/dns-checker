name: Publish frontend

on:
  push:
    branches:
      - production
    paths:
      - '.github/workflows/publish-frontend.yml'
      - 'workers/frontend/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose an environment to deploy to:'
        required: true
        type: environment

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment || github.ref_name }}
      url: https://${{ (inputs.environment || vars.ENVIRONMENT) != 'production' && format('{0}.', (inputs.environment || vars.ENVIRONMENT)) || '' }}dns.demosjarco.dev
    steps:
      - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo-and-containers: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          check-latest: true
          cache: 'npm'
      - run: npm ci --ignore-scripts --include-workspace-root --workspace frontend
      - run: npm run-script install --if-present --include-workspace-root --workspace frontend
      - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            workers/*/.tsbuildinfo
          key: tsc-${{ hashFiles('**/*.tsbuildinfo', '**/package-lock.json') }}
          restore-keys: |
            tsc-
          enableCrossOsArchive: true
      - run: npm --workspace frontend run build.types
      - uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            workers/*/.tsbuildinfo
          key: tsc-${{ hashFiles('**/*.tsbuildinfo', '**/package-lock.json') }}
          enableCrossOsArchive: true
      - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            workers/frontend/dist/**
          key: qwik-c-${{ hashFiles('workers/frontend/src/**', '**/*.tsbuildinfo', '**/package-lock.json') }}
          restore-keys: |
            qwik-c-
          enableCrossOsArchive: true
      - run: npm --workspace frontend run build.client
        timeout-minutes: 1
        continue-on-error: true # TODO: remove once `build.client` stops hanging
      - uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            workers/frontend/dist/**
          key: qwik-c-${{ hashFiles('workers/frontend/src/**', '**/*.tsbuildinfo', '**/package-lock.json') }}
          enableCrossOsArchive: true
      - uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            workers/frontend/server/**
          key: qwik-s-${{ hashFiles('**/*.tsbuildinfo', '**/package-lock.json') }}
          restore-keys: |
            qwik-s-
          enableCrossOsArchive: true
      - run: npm --workspace frontend run build.server
        timeout-minutes: 1
        continue-on-error: true # TODO: remove once `build.server` stops hanging
      - uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            workers/frontend/server/**
          key: qwik-s-${{ hashFiles('workers/frontend/src/**', '**/*.tsbuildinfo', '**/package-lock.json') }}
          enableCrossOsArchive: true
      - run: npm --workspace frontend run lint
      - run: echo "wrangler_version=$(npm ls wrangler --depth=0 --json | jq -r '.dependencies.wrangler.version')" >> $GITHUB_OUTPUT
        id: npm_wrangler_version
      - uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
        id: wrangler
        with:
          wranglerVersion: ${{ steps.npm_wrangler_version.outputs.wrangler_version }}
          apiToken: ${{ secrets.WORKER_DEPLOY_CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          environment: ${{ (vars.ENVIRONMENT == 'production' && '') || vars.ENVIRONMENT }}
          workingDirectory: workers/frontend
          vars: |
            GIT_HASH
        env:
          GIT_HASH: ${{ github.sha }}
